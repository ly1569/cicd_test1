# # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

# name: Java CI with Maven

# # 在对master分支进行推送和拉取的时候进行构建，测试，等操作
# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file xm-animal-manager/springboot/pom.xml

#     # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6



name: CI/CD for Spring Boot and Frontend

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    name: Build Backend
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B package --file xm-animal-manager/springboot/pom.xml
      
      - name: Save JAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-jar
          path: xm-animal-manager/springboot/target/*.jar

  build-frontend:
    runs-on: ubuntu-latest
    name: Build Frontend
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      
      - name: List Directory
        run: ls -R  # 列出当前工作目录的所有文件和目录
      
      - name: Install dependencies and build
        run: |
          cd xm-animal-manager/vue  # 进入前端项目目录
          npm install
          npm run build

      - name: Save frontend build artifact
        uses: actions/upload-artifact@v2
        with:
          name: vue-build
          path: xm-animal-manager/vue/build

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    name: Deploy to Server
    steps:
      - uses: actions/checkout@v4
      
      - name: Download backend JAR
        uses: actions/download-artifact@v2
        with:
          name: backend-jar
          path: xm-animal-manager/springboot/target

      - name: Download frontend build
        uses: actions/download-artifact@v2
        with:
          name: vue-build
          path: xm-animal-manager/vue/build
      
      - name: Deploy to Server
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USERNAME: ${{ secrets.DEPLOY_USER }}
          PASSWORD: ${{ secrets.DEPLOY_PASS }}
        run: |
          sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no xm-animal-manager/springboot/target/*.jar $USERNAME@$HOST:/path/to/backend/
          sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no -r xm-animal-manager/vue/build/* $USERNAME@$HOST:/path/to/frontend/
          
          # Optional: Restart the backend service if needed
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$HOST 'sudo systemctl restart my-backend-service'

