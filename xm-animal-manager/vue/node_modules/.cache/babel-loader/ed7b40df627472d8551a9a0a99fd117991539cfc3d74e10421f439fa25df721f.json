{"ast":null,"code":"export default {\n  name: \"UserPerson\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      account: null,\n      fromVisible: false,\n      rules: {\n        account: [{\n          required: true,\n          message: '请输入余额',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getPerson();\n  },\n  methods: {\n    getPerson() {\n      this.$request.get('/user/selectById/' + this.user.id).then(res => {\n        if (res.code === '200') {\n          this.user = res.data;\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    recharge() {\n      this.account = 100;\n      this.fromVisible = true;\n    },\n    pay() {\n      this.user.account = parseFloat(this.account) + parseFloat(this.user.account);\n      this.update();\n      this.fromVisible = false;\n    },\n    update() {\n      // 保存当前的用户信息到数据库\n      this.$request.put('/user/update', this.user).then(res => {\n        if (res.code === '200') {\n          // 成功更新\n          this.$message.success('保存成功');\n\n          // 更新浏览器缓存里的用户信息\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n\n          // 触发父级的数据更新\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把user的头像属性换成上传的图片的链接\n      this.$set(this.user, 'avatar', response.data);\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","account","fromVisible","rules","required","message","trigger","created","getPerson","methods","$request","get","id","then","res","code","setItem","stringify","$message","error","msg","recharge","pay","parseFloat","update","put","success","$emit","handleAvatarSuccess","response","file","fileList","$set"],"sources":["src/views/manager/UserPerson.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"width: 50%\">\r\n      <el-form :model=\"user\" label-width=\"100px\" style=\"padding-right: 50px\">\r\n        <div style=\"margin: 15px; text-align: center\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"user.name\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"user.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"user.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"余额\" prop=\"email\">\r\n          <el-input v-model=\"user.account\" disabled placeholder=\"余额\"></el-input>\r\n        </el-form-item>\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button type=\"primary\" @click=\"update\">保 存</el-button>\r\n          <el-button type=\"warning\" @click=\"recharge\">充 值</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n    <el-dialog title=\"充值信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"account\" label=\"输入余额\">\r\n          <el-input v-model=\"account\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"pay\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserPerson\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      account: null,\r\n      fromVisible: false,\r\n      rules: {\r\n        account: [\r\n          {required: true, message: '请输入余额', trigger: 'blur'},\r\n        ]\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.getPerson()\r\n  },\r\n  methods: {\r\n    getPerson() {\r\n      this.$request.get('/user/selectById/' + this.user.id).then(res => {\r\n        if (res.code === '200') {\r\n          this.user = res.data\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    recharge() {\r\n      this.account = 100\r\n      this.fromVisible = true\r\n    },\r\n    pay() {\r\n      this.user.account = parseFloat(this.account) + parseFloat(this.user.account)\r\n      this.update()\r\n      this.fromVisible = false\r\n    },\r\n    update() {\r\n      // 保存当前的用户信息到数据库\r\n      this.$request.put('/user/update', this.user).then(res => {\r\n        if (res.code === '200') {\r\n          // 成功更新\r\n          this.$message.success('保存成功')\r\n\r\n          // 更新浏览器缓存里的用户信息\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\r\n\r\n          // 触发父级的数据更新\r\n          this.$emit('update:user')\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把user的头像属性换成上传的图片的链接\r\n      this.$set(this.user, 'avatar', response.data)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/deep/.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n/deep/.el-upload {\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n}\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  display: block;\r\n  border-radius: 50%;\r\n}\r\n</style>"],"mappings":"AAmDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;MACAC,WAAA;MACAC,KAAA;QACAF,OAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,4BAAAf,IAAA,CAAAgB,EAAA,EAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAnB,IAAA,GAAAkB,GAAA,CAAAnB,IAAA;UACAI,YAAA,CAAAiB,OAAA,YAAAnB,IAAA,CAAAoB,SAAA,MAAArB,IAAA;QACA;UACA,KAAAsB,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAM,GAAA;QACA;MACA;IACA;IACAC,SAAA;MACA,KAAApB,OAAA;MACA,KAAAC,WAAA;IACA;IACAoB,IAAA;MACA,KAAA1B,IAAA,CAAAK,OAAA,GAAAsB,UAAA,MAAAtB,OAAA,IAAAsB,UAAA,MAAA3B,IAAA,CAAAK,OAAA;MACA,KAAAuB,MAAA;MACA,KAAAtB,WAAA;IACA;IACAsB,OAAA;MACA;MACA,KAAAd,QAAA,CAAAe,GAAA,sBAAA7B,IAAA,EAAAiB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAG,QAAA,CAAAQ,OAAA;;UAEA;UACA3B,YAAA,CAAAiB,OAAA,YAAAnB,IAAA,CAAAoB,SAAA,MAAArB,IAAA;;UAEA;UACA,KAAA+B,KAAA;QACA;UACA,KAAAT,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAM,GAAA;QACA;MACA;IACA;IACAQ,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAC,IAAA,MAAApC,IAAA,YAAAiC,QAAA,CAAAlC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}